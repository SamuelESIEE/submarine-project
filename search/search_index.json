{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Autonomous Submarine Project","text":"<p>Welcome to the official documentation for the Autonomous Submarine project. This project aims to design, develop, and test a fully autonomous underwater vehicle capable of navigation, data collection, and AI-assisted decision making.</p>"},{"location":"#whats-in-this-documentation","title":"What\u2019s in this documentation?","text":"<ul> <li>Project Overview: Learn about the goals, architecture, and high-level design of the submarine.</li> <li>Requirements: Detailed hardware and software requirements, including system specs and sensor details.</li> <li>Design: In-depth diagrams and descriptions of hardware interfaces and system components.</li> <li>Firmware Development: Source code and build instructions for the STM32H7 microcontroller firmware.</li> <li>Testing &amp; Validation: How we validate the system through various test plans and analysis.</li> <li>Appendix: Helpful references, definitions, and additional resources.</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Start by reviewing the Project Overview to understand the motivation and overall design philosophy behind the submarine.</p> <p>Feel free to explore each section through the navigation menu on the left.</p> <p>For any questions, contact the project lead or open an issue in the GitHub repository.</p> <p>Thank you for your interest!</p>"},{"location":"design/block_diagrams/","title":"Block Diagrams","text":"<p>Below is the high-level system block diagram of the Autonomous Submarine:</p> <p>![System Block Diagram]</p>"},{"location":"design/block_diagrams/#description","title":"Description","text":"<ul> <li>The STM32H7 MCU controls motor drivers, reads sensor data, and handles communication.</li> <li>The STM32L0 backup MCU monitors battery and pressure sensors to wake the system from sleep.</li> <li>AI module (Raspberry Pi or K210) processes vision data for obstacle avoidance.</li> <li>Wireless module manages communication with surface station.</li> </ul>"},{"location":"design/interfaces/","title":"Communication Interfaces","text":"Interface Usage Protocol Details UART Debugging and data logging 115200 baud, 8N1 SPI Pressure sensor communication Mode 0, 1 MHz I2C IMU sensor and EEPROM Standard mode 100 kHz Wireless Telemetry and remote commands 2.4 GHz proprietary protocol <p>All interfaces use level shifting to protect the MCU inputs from voltage mismatches.</p>"},{"location":"firmware/stm32h7/","title":"Firmware for STM32H7","text":""},{"location":"firmware/stm32h7/#overview","title":"Overview","text":"<p>The STM32H7 firmware is responsible for:</p> <ul> <li>Sensor data acquisition and filtering</li> <li>Motor control (PWM outputs)</li> <li>Communication with AI coprocessor and wireless module</li> <li>Data logging on microSD card</li> </ul>"},{"location":"firmware/stm32h7/#architecture","title":"Architecture","text":"<ul> <li>Main Loop: Periodically reads sensors and updates motor commands.</li> <li>Interrupts: Handle UART, SPI data reception.</li> <li>Power Management: Coordinates with STM32L0 for low-power modes.</li> </ul>"},{"location":"firmware/stm32h7/#code-snippet-reading-imu-via-i2c","title":"Code Snippet: Reading IMU via I2C","text":"<p>```c HAL_I2C_Mem_Read(&amp;hi2c1, MPU9250_ADDRESS, MPU9250_ACCEL_XOUT_H, I2C_MEMADD_SIZE_8BIT, buffer, 6, 100);</p>"},{"location":"overview/introduction/","title":"Autonomous Submarine Project Overview","text":"<p>Welcome to the Autonomous Submarine documentation! This project focuses on designing, building, and testing an autonomous underwater vehicle with advanced navigation, sensing, and control capabilities.</p>"},{"location":"overview/introduction/#project-goals","title":"Project Goals","text":"<ul> <li>Develop a reliable and robust submarine platform capable of autonomous underwater navigation.</li> <li>Integrate various sensors to monitor environmental conditions and system status.</li> <li>Implement firmware to control motors, sensors, and communication systems.</li> <li>Validate system performance through rigorous testing.</li> </ul>"},{"location":"overview/introduction/#documentation-structure","title":"Documentation Structure","text":"<p>To help you navigate this project, here is an overview of the main documentation sections:</p> <ul> <li>Requirements: Detailed hardware and software requirements, including sensors and system constraints.</li> <li>Design: System architecture, block diagrams, and hardware interface designs.</li> <li>Firmware: Embedded software running on the STM32H7 microcontroller.</li> <li>Testing: Test plans, results, and analysis.</li> </ul>"},{"location":"overview/introduction/#getting-started","title":"Getting Started","text":"<ul> <li>Start by reviewing the Requirements to understand the scope and constraints.</li> <li>Dive into the Design section to see how the system is architected.</li> <li>Explore the Firmware documentation to learn about the software implementation.</li> <li>Finally, review the Testing results to understand system reliability.</li> </ul> <p>If you have questions or want to contribute, please refer to the repository README or contact the project maintainer.</p>"},{"location":"requirements/sensors/","title":"Sensors Requirements","text":""},{"location":"requirements/sensors/#1-depth-sensor","title":"1. Depth Sensor","text":"Parameter Specification Type Pressure-based sensor Operating Range 0 to 50 meters Accuracy \u00b10.1 meters Interface I2C or SPI Update Rate \u2265 10 Hz"},{"location":"requirements/sensors/#2-imu-inertial-measurement-unit","title":"2. IMU (Inertial Measurement Unit)","text":"Parameter Specification Components 3-axis accel, gyro, magnetometer Acceleration Range \u00b116g Gyroscope Range \u00b12000 dps Gyro Drift &lt; 0.1\u00b0/s Interface SPI or I2C Update Rate \u2265 100 Hz"},{"location":"requirements/sensors/#3-temperature-sensor","title":"3. Temperature Sensor","text":"Parameter Specification Range -10\u00b0C to 60\u00b0C Accuracy \u00b10.5\u00b0C Interface Analog or I2C Placement Inside and outside hull"},{"location":"requirements/sensors/#4-sonar-acoustic-sensor-optional","title":"4. Sonar / Acoustic Sensor (Optional)","text":"Parameter Specification Purpose Obstacle detection/ranging Range Up to 20 meters Accuracy \u00b10.1 meters Interface UART or SPI"},{"location":"requirements/sensors/#5-battery-voltage-and-current-sensors","title":"5. Battery Voltage and Current Sensors","text":"Parameter Specification Voltage Range 0 to 16V Current Range 0 to 10A Accuracy \u00b11% Interface Analog or digital"},{"location":"requirements/sensors/#6-additional-sensors-optional","title":"6. Additional Sensors (Optional)","text":"Sensor Type Purpose Pressure Sensor Internal pressure monitoring Humidity Sensor Detect leaks/condensation"},{"location":"requirements/sensors/#integration-notes","title":"Integration Notes","text":"<ul> <li>All sensors must support STM32H7 interfaces (SPI, I2C, UART, Analog).</li> <li>Data must be timestamped and logged.</li> <li>Calibration procedures must be documented.</li> </ul>"},{"location":"requirements/system/","title":"System Requirements","text":"<p>This document defines the overall system requirements for the Autonomous Submarine project.</p>"},{"location":"requirements/system/#1-functional-requirements","title":"1. Functional Requirements","text":"Requirement Description Autonomous Navigation Navigate underwater autonomously using sensors and controls. Communication Wireless telemetry and command support when surfaced. Data Logging Log sensor and system data to onboard storage. Battery Management Monitor battery voltage, capacity, and power consumption. Fail-safe Operations Surface or enter safe mode upon critical failures."},{"location":"requirements/system/#2-performance-requirements","title":"2. Performance Requirements","text":"Parameter Specification Operating Depth Up to 30 meters Mission Duration Minimum 2 hours operation Maximum Speed 1.5 m/s Position Accuracy \u00b11 meter"},{"location":"requirements/system/#3-environmental-requirements","title":"3. Environmental Requirements","text":"Parameter Specification Temperature Range 0\u00b0C to 40\u00b0C Waterproofing IP68 rating Pressure Resistance Withstand up to 30 m depth"},{"location":"requirements/system/#4-hardware-requirements","title":"4. Hardware Requirements","text":"Component Specification Microcontroller STM32H7 series Sensors See Sensors Requirements Communication Wi-Fi and RF modules Power Supply Li-ion battery, \u2265 10,000 mAh"},{"location":"requirements/system/#5-software-requirements","title":"5. Software Requirements","text":"Component Description Firmware Sensor reading, motor control, communication AI/Navigation Obstacle detection, path planning, position estimation Update Capability Support OTA firmware updates"},{"location":"requirements/system/#6-compliance-and-safety","title":"6. Compliance and Safety","text":"Requirement Notes Marine Safety Comply with marine safety standards Electrical Certifications CE and FCC certifications <p>Refer to Sensors Requirements for detailed sensor specs.</p>"}]}